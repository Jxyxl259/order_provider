<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yaic</groupId>
	<artifactId>order</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>

	<name>order</name> <!-- Project Name -->
	<description>Spring Boot for order</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.14.RELEASE</version>
		<relativePath />
	</parent>

	<!-- Begin 添加profile配置不同环境下的参数信息 -->
	<profiles>
		<!-- dev -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env.profiles.active>dev</env.profiles.active>
			</properties>
		</profile>
		<!-- sit -->
		<profile>
			<id>sit</id>
			<properties>
				<env.profiles.active>sit</env.profiles.active>
			</properties>
		</profile>
		<!-- uat -->
		<profile>
			<id>uat</id>
			<properties>
				<env.profiles.active>uat</env.profiles.active>
			</properties>
		</profile>
		<!-- prod -->
		<profile>
			<id>prod</id>
			<properties>
				<env.profiles.active>prod</env.profiles.active>
			</properties>
		</profile>
	</profiles>
	<!-- End 添加profile配置不同环境下的参数信息 -->

	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<resource.delimiter>${}</resource.delimiter>
		
		<java.version>1.8</java.version>
		
		<commons-lang.version>2.6</commons-lang.version>
		<druid.starter.version>1.1.10</druid.starter.version>
		<emay-des.version>1.0</emay-des.version>
		<javax.persistence.version>1.0</javax.persistence.version>
		<jsqlparser.version>0.9.1</jsqlparser.version>
		<mybatis.starter.version>1.3.2</mybatis.starter.version>
		<platform.version>1.0.4-SNAPSHOT</platform.version>
		<sysframework.version>1.0.0</sysframework.version>
		<shiro.version>1.2.2</shiro.version>
		<yafa.version>1.0.0</yafa.version>
		<eureke.version>1.3.1.RELEASE</eureke.version>
		<spring-cloud-config.version>1.3.1.RELEASE</spring-cloud-config.version>
	</properties>

	<dependencies>

		<!-- 服务治理 start -->
		<!-- actuator监控信息完善 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- 将微服务provider侧注册进eureka -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
			<version>${eureke.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<version>${spring-cloud-config.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sinosoft.sysframework</groupId>
			<artifactId>sysframework</artifactId>
			<version>${sysframework.version}</version>
		</dependency>
		<dependency>
			<groupId>com.emay</groupId>
			<artifactId>emay-des</artifactId>
			<version>${emay-des.version}</version>
		</dependency>
		<!-- Begin for AOP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- End for AOP -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Begin for Tomcat jsp -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- End for Tomcat jsp -->

		<!-- MySQL 数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- Druid 数据库连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.starter.version}</version>
		</dependency>

		<!-- Begin for MyBatis-yafa -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis.starter.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.jsqlparser</groupId>
			<artifactId>jsqlparser</artifactId>
			<version>${jsqlparser.version}</version>
		</dependency>

		<dependency>
			<groupId>com.yaic.fa</groupId>
			<artifactId>yafa</artifactId>
			<version>${yafa.version}</version>
		</dependency>
		<!-- End for MyBatis-yafa -->

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>${javax.persistence.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<dependency>
			<groupId>com.yaic</groupId>
			<artifactId>platform</artifactId>
			<version>${platform.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Shiro 配置开始 -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<version>${shiro.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-quartz</artifactId>
			<version>${shiro.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>quartz</artifactId>
					<groupId>org.opensymphony.quartz</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- Shiro 配置结束 -->

		<!-- jedis 配置开始 -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>
		<!-- jedis 配置结束 -->

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.name}</finalName>

		<!-- 打包配置文件过滤 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*application*.properties</exclude>
					<exclude>**/*logback*.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*application.properties</include>
					<include>**/*application-${env.profiles.active}.properties</include>
					<include>**/*logback-${env.profiles.active}.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>

			<!-- start解决外部tomcat部署日志文件不能生成 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy todir="${project.build.directory}/classes/"
									file="${project.build.directory}/classes/config/logging/logback-${env.profiles.active}.xml">
								</copy>
								<move
									file="${project.build.directory}/classes/logback-${env.profiles.active}.xml"
									tofile="${project.build.directory}/classes/logback.xml">
								</move>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>

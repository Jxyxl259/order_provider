<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yaic.app.common.dao.UserRoleDao">
    <resultMap id="userRoleResultMap" type="com.yaic.app.common.dto.domain.UserRoleDto">
        <id property="userRoleId" column="USER_ROLE_ID" jdbcType="VARCHAR"></id>
        <result property="createdDate" column="CREATED_DATE" jdbcType="TIMESTAMP"></result>
        <result property="createdBy" column="CREATED_BY" jdbcType="VARCHAR"></result>
        <result property="updatedDate" column="UPDATED_DATE" jdbcType="TIMESTAMP"></result>
        <result property="updatedBy" column="UPDATED_BY" jdbcType="VARCHAR"></result>
        <result property="userId" column="USER_ID" jdbcType="VARCHAR"></result>
        <result property="roleId" column="ROLE_ID" jdbcType="VARCHAR"></result>
    </resultMap>
    
    <resultMap id="userRoleFormResultMap" type="com.yaic.app.common.form.UserRoleForm">
        <result property="userId" column="USER_ID" jdbcType="VARCHAR"></result>
        <result property="roleId" column="ROLE_ID" jdbcType="VARCHAR"></result>
        <result property="roleName" column="role_Name" jdbcType="VARCHAR"></result>
        <result property="congfigFlag" column="congfig_flag" jdbcType="VARCHAR"></result>
    </resultMap>
    
     <resultMap id="rolesResultMap" type="com.yaic.app.common.dto.domain.RoleDto">
        <id property="roleId" column="ROLE_ID" jdbcType="VARCHAR"></id>
        <result property="roleName" column="ROLE_NAME" jdbcType="VARCHAR"></result>
    </resultMap>
    
    <resultMap id="treeNodeMap" type="com.yaic.app.common.dto.TreeNode">
        <id property="id" column="resource_id" jdbcType="VARCHAR"></id>
        <result property="level" column="resource_level" jdbcType="VARCHAR"></result>
        <result property="parentId" column="parent_resource_id" jdbcType="VARCHAR"></result>
        <result property="text" column="resource_name" jdbcType="VARCHAR"></result>
        <result property="icon" column="resource_icon_class" jdbcType="VARCHAR"></result>
        <result property="selected" column="selected" jdbcType="VARCHAR"></result>
    </resultMap>
    
   <select id="findUnConfigRoles" resultMap="rolesResultMap" parameterType="java.lang.String" >
		SELECT ROLE_ID ,  ROLE_NAME  FROM APP_ROLE t   Where  not exists 
		    ( select 1 from APP_user_role a where a.ROLE_ID = t.ROLE_ID and user_id  = #{userId}  ) 
		 ORDER BY   T.ROLE_ID 
   </select>
   
    <select id="findUserRoles" resultMap="userRoleFormResultMap" parameterType="java.lang.String" >
	  SELECT #{userId} ,
	         b.role_id,
             b.ROLE_NAME,
       (select case when count(1) = 0 then   'false' else 'true'  end 
          from APP_user_role a
         where a.role_id = b.role_id
           and a.user_id = #{userId} ) as congfig_flag  from 
       APP_role b 
          ORDER BY b.ROLE_ID
		 
   </select>
 
  <select id="findAllResourceByUser" resultMap="treeNodeMap" parameterType="java.lang.String">
		  SELECT A.RESOURCE_ID,
           A.RESOURCE_LEVEL,
           A.PARENT_RESOURCE_ID,
           A.RESOURCE_NAME,
           A.RESOURCE_TYPE,
           A.RESOURCE_ICON_CLASS,
          (SELECT CASE WHEN COUNT(1)>0 THEN 1 ELSE 0 END  FROM APP_USER_EXCLUDE_RESOURCE B WHERE B.RESOURCE_ID = A.RESOURCE_ID AND B.USER_ID = #{userId} ) as selected
      FROM APP_RESOURCE A   
       WHERE  EXISTS 
      (
       SELECT 1 FROM APP_USER_ROLE T1 ,APP_ROLE_RESOURCE T2
        WHERE T1.ROLE_ID = T2.ROLE_ID   AND T2.RESOURCE_ID = A.RESOURCE_ID AND  T1.USER_ID = #{userId}
      )
     ORDER BY A.RESOURCE_LEVEL DESC , 
            A.PARENT_RESOURCE_ID , A.RESOURCE_ID  
	</select>
 
   <select id="findAllResourceByRoles" resultMap="treeNodeMap"  parameterType="java.util.HashMap">
		  SELECT A.RESOURCE_ID,
           A.RESOURCE_LEVEL,
           A.PARENT_RESOURCE_ID,
           A.RESOURCE_NAME,
           A.RESOURCE_TYPE,
           A.RESOURCE_ICON_CLASS,
          (SELECT CASE WHEN COUNT(1)>0 THEN 1 ELSE 0 END  FROM APP_USER_EXCLUDE_RESOURCE B WHERE B.RESOURCE_ID = A.RESOURCE_ID AND B.USER_ID = #{userCode} ) as selected
      FROM APP_RESOURCE A   
       WHERE  EXISTS 
      (
       SELECT 1 FROM APP_USER_ROLE T1 ,APP_ROLE_RESOURCE T2
        WHERE T1.ROLE_ID = T2.ROLE_ID   AND T2.RESOURCE_ID = A.RESOURCE_ID AND 
        T2.ROLE_ID IN 
        <foreach collection="roleList" item="item" index="index" open="(" close=")" separator=",">
			'${item}'
		</foreach>
      )
     ORDER BY A.RESOURCE_LEVEL DESC , 
            A.PARENT_RESOURCE_ID , A.RESOURCE_ID  
	</select>
 
</mapper>